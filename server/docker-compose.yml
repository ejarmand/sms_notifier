version: '3.8'

services:
  sms-notifier:
    build: .
    container_name: sms-notifier-server
    ports:
      - "0.0.0.0:8081:5000"  # Bind to all interfaces for VPN access
    environment:
      # Twilio Configuration (required)
      - TWILIO_ACCOUNT_SID=${TWILIO_ACCOUNT_SID}
      - TWILIO_AUTH_TOKEN=${TWILIO_AUTH_TOKEN}
      - TWILIO_PHONE_NUMBER=${TWILIO_PHONE_NUMBER}
      - YOUR_PHONE_NUMBER=${YOUR_PHONE_NUMBER}
      
      # Production Configuration
      - HOST=0.0.0.0
      - PORT=5000
      - DEBUG=false
      - FLASK_ENV=production
      - LOG_LEVEL=INFO
    volumes:
      # Mount authorized_keys file
      - ./authorized_keys:/app/auth/authorized_keys:ro
      # Mount logs directory for persistence
      - ./logs:/app/logs
      # Mount database directory for persistence
      - ./data:/app/data
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    networks:
      - sms-network
    deploy:
      resources:
        limits:
          memory: 512M
          cpus: '0.5'
        reservations:
          memory: 256M
          cpus: '0.25'

  # Nginx reverse proxy
  nginx:
    image: nginx:alpine
    container_name: sms-notifier-nginx
    ports:
      - "0.0.0.0:8080:80"  # Bind to all interfaces for VPN access
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./logs/nginx:/var/log/nginx  # Nginx logs
    depends_on:
      - sms-notifier
    restart: unless-stopped
    networks:
      - sms-network
    deploy:
      resources:
        limits:
          memory: 128M
          cpus: '0.25'


networks:
  sms-network:
    driver: bridge

volumes:
  logs:
  data:
